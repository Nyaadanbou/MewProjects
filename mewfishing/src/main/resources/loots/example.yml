#
# LootTable Example
#
# You can create as many files as you want, each file represents a loot table.

# When the player successfully bites something (fishes, books, junks, etc),
# the plugin loops through all the loot tables and pick one if the chance passes.

# The weight where this loot table will be triggered.
# Value range: [0, 2147483647]. You can write decimals as well.
# Set to "0" = this loot table can only be drawn from within a table.
# (Required)
weight: 50.5

# Conditions to be met for this loot table to be triggered.
# (Required. Set to "conditions: {}" to have no conditions.)
conditions:
  # This condition is met if: ANY cron expression matches OR it's an empty list
  # Crontab Guru Tools: https://crontab.guru/every-monday
  cron_expression:
    - '* * * * MON'
  # This condition is met if: ANY server matches OR it's an empty list
  # The server id is defined in the LuckPerms static contexts
  server:
    - home1
  # This condition is met if: ALL weather matches OR it's an empty list
  # Available values: clear, not_clear, thundering, not_thundering
  weather:
    - not_clear
    - thundering
  # This condition is met if: ANY height matches OR it's an empty list
  height:
    - '[0,64)'
    - '(-∞,-16]'
    - '[64,+∞)'
  # This condition is met if: ANY time matches OR it's an empty list
  # More information: https://minecraft.fandom.com/wiki/Daylight_cycle
  time:
    - '[0,13000]'
    - '[18000,21000]'
  # This condition is met if: ANY moon phase matches OR it's an empty list
  # Available values: https://jd.papermc.io/paper/1.20/io/papermc/paper/world/MoonPhase.html
  moon_phase:
    - full_moon
    - new_moon
  # This condition is met if: ANY biome matches OR it's an empty list
  biome:
    - minecraft:plains # write plain string to match exactly
    - ^terra:overworld/overworld/.*river.* # start with "^" to match with regex

# Determines whether the loot should be drawn with-replacement (true) or without-replacement (false).
# (Required)
replacement: false

# Determines how many loots will be chosen from the item list bellow.
# (Required)
rolls: 1

# Loots
# (Required)
items:

  # If "Type" is "vanilla", then you can specify "Name", "CustomModelData", "Lore", "Enchantments" for the loot item.
  custom-item-example:
    # (Required) Type of this loot item
    type: 'vanilla'
    # (Required) Material type https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
    id: 'IRON_SWORD'
    # (Optional. Default: None) Item custom name, you can use color codes (https://minecraft.tools/en/color-code.php)
    name: '<green>Test'
    # (Optional. Default: None) Custom model data
    custommodeldata: 1000
    # (Optional. Default: None) Item lore
    lore:
      - '<red>Example Lore 1'
    # (Optional. Default: None) List of enchantments, one item can have multiple enchantments.
    enchantments:
      # Enchantment name and level (As of 1.5.4.2, it is using the Minecraft namespaced keys with '_' instead of spaces)
      looting: 1
      sharpness: 1
    # (Optional. Default: 1) Number of items per stack.
    amount: 1
    # (Required) Determines how often this entry will be chosen out of all the entries in the list.
    weight: 10
    # Loot can also have its own conditions!
    # Note that if the conditions are not met, this loot will simply be skipped.
    # (Optional. Default: None)
    conditions:
      biomes:
        - minecraft:plains

  # Above example continued.
  # You don't have to specify all values.
  # Here, we only specified the "Name".
  # All other values are by default.
  simple-item-example:
    # (Required) Type of this loot item
    type: 'vanilla'
    # (Required) Material type
    id: 'IRON_HELMET'
    # (Optional. Default: None)
    name: '<green>Test2'
    # (Required) Material type
    weight: 20

  # Above example continued.
  ranged-amount-example:
    # (Required) Type of this loot item
    type: 'vanilla'
    # (Required) Material type
    id: 'GOLD_INGOT'
    # (Optional. Default: None)
    name: '<gold>Test3'
    # (Optional. Default: 1) The "Amount" option supports ranged numbers. See the wiki for details.
    amount: '[3;8]'
    # (Required)
    weight: 20

  # This is an example of Nested Loot Table.
  # You can define another loot table within this loot table!
  # The depth of nested loot tables is basically unlimited, but be careful with loop!
  nested-table-example:
    # (Required)
    type: 'table'
    # (Required) The name of another loot table. Case-sensitive.
    id: example-another
    # (Optional. Default: 1) Amount being greater than 1 means the loot table will be drawn multiple times.
    amount: 1
    # (Required)
    weight: 1000

  # This is a plugin item example.
  # Only the options "ID", "Amount" and "Weight" are available if you use "Type: PLUGIN".
  plugin-item-example:
    # (Required) The "Type" option needs to be "PLUGIN".
    type: 'plugin'
    # (Required) The ItemID of this plugin item. List of available formats:
    #   - itemsadder:{namespace}:{itemId}
    #     (Plugin link: https://itemsadder.devs.beer/)
    #   - mmoitems:{itemType}:{itemId}
    #     (Plugin link: https://www.spigotmc.org/resources/mmoitems-premium.39267/)
    #   - interactivebooks:{bookId}
    #     (Plugin link: https://www.spigotmc.org/resources/interactivebooks.45604/)
    id: itemsadder:iasurvival:ruby
    # (Optional. Default: 1)
    amount: 1
    # (Required)
    weight: 30

  command-example:
    # (Required)
    type: 'command'
    # (Required)
    exec:
      - "say %player_name% got a fish loot!" # This command is executed by the console
      - "@ me message from example.yml" # This command is executed by the player
      - "+ I just caught a big fish!" # Forces the player to say something on the chat
    # (Optional. Default: 1)
    amount: 1
    # (Required)
    weight: 100
